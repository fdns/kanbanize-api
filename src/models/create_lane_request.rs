/*
 * Kanbanize API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanbanize.com
 * Generated by: https://openapi-generator.tech
 */

/// CreateLaneRequest : Lane data.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateLaneRequest {
    #[serde(rename = "workflow_id", skip_serializing_if = "Option::is_none")]
    pub workflow_id: Option<i32>,
    /// The id of the parent lane. One of workflow and parent_lane_id must be set, but not both!
    #[serde(rename = "parent_lane_id", skip_serializing_if = "Option::is_none")]
    pub parent_lane_id: Option<i32>,
    /// The position of the lane within the workflow or its parent.
    #[serde(rename = "position")]
    pub position: i32,
    /// The name of the new lane.
    #[serde(rename = "name")]
    pub name: String,
    /// A description of the new lane.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The lane color. 6 hexadecimal characters are expected.
    #[serde(rename = "color", skip_serializing_if = "Option::is_none")]
    pub color: Option<String>,
}

impl CreateLaneRequest {
    /// Lane data.
    pub fn new(position: i32, name: String) -> CreateLaneRequest {
        CreateLaneRequest {
            workflow_id: None,
            parent_lane_id: None,
            position,
            name,
            description: None,
            color: None,
        }
    }
}


