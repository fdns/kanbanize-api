/*
 * Kanbanize API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanbanize.com
 * Generated by: https://openapi-generator.tech
 */

/// SetLaneSectionLimitRequest : Lane section limit data.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SetLaneSectionLimitRequest {
    /// The lane id.
    #[serde(rename = "lane_id")]
    pub lane_id: i32,
    /// 1 - backlog, 2 - requested, 3 - progress, 4 - done
    #[serde(rename = "section")]
    pub section: Section,
    /// The WIP limit of the lane section. Set to 0 to remove the current WIP limit.
    #[serde(rename = "limit")]
    pub limit: i32,
}

impl SetLaneSectionLimitRequest {
    /// Lane section limit data.
    pub fn new(lane_id: i32, section: Section, limit: i32) -> SetLaneSectionLimitRequest {
        SetLaneSectionLimitRequest {
            lane_id,
            section,
            limit,
        }
    }
}

/// 1 - backlog, 2 - requested, 3 - progress, 4 - done
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Section {
    #[serde(rename = "1")]
    Variant1,
    #[serde(rename = "2")]
    Variant2,
    #[serde(rename = "3")]
    Variant3,
    #[serde(rename = "4")]
    Variant4,
}

impl Default for Section {
    fn default() -> Section {
        Self::Variant1
    }
}

