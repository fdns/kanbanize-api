/*
 * Kanbanize API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanbanize.com
 * Generated by: https://openapi-generator.tech
 */

/// UpdateWebhookRequest : Webhook data.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateWebhookRequest {
    /// The url of the webhook.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// Controls whether the webhook is enabled or not.
    #[serde(rename = "is_enabled", skip_serializing_if = "Option::is_none")]
    pub is_enabled: Option<IsEnabled>,
    /// An id of a board for the events of which the webhook will be invoked. If set to null the webhook will be invoked for the events of all boards.
    #[serde(rename = "board_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub board_id: Option<Option<i32>>,
}

impl UpdateWebhookRequest {
    /// Webhook data.
    pub fn new() -> UpdateWebhookRequest {
        UpdateWebhookRequest {
            url: None,
            is_enabled: None,
            board_id: None,
        }
    }
}

/// Controls whether the webhook is enabled or not.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IsEnabled {
    #[serde(rename = "0")]
    Variant0,
    #[serde(rename = "1")]
    Variant1,
}

impl Default for IsEnabled {
    fn default() -> IsEnabled {
        Self::Variant0
    }
}

