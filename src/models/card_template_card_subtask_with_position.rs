/*
 * Kanbanize API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanbanize.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct CardTemplateCardSubtaskWithPosition {
    #[serde(rename = "template_subtask_id", skip_serializing_if = "Option::is_none")]
    pub template_subtask_id: Option<i32>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "owner_user_id", skip_serializing_if = "Option::is_none")]
    pub owner_user_id: Option<i32>,
    #[serde(rename = "attachments", skip_serializing_if = "Option::is_none")]
    pub attachments: Option<Vec<crate::models::CardAttachment>>,
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
}

impl CardTemplateCardSubtaskWithPosition {
    pub fn new(description: String) -> CardTemplateCardSubtaskWithPosition {
        CardTemplateCardSubtaskWithPosition {
            template_subtask_id: None,
            description,
            owner_user_id: None,
            attachments: None,
            position: None,
        }
    }
}


