/*
 * Kanbanize API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanbanize.com
 * Generated by: https://openapi-generator.tech
 */

/// SubtaskCreateRequest : Subtask data.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubtaskCreateRequest {
    /// A subtask description.
    #[serde(rename = "description")]
    pub description: String,
    /// A user id of the assignee.
    #[serde(rename = "owner_user_id", skip_serializing_if = "Option::is_none")]
    pub owner_user_id: Option<i32>,
    /// When set to 1 the subtask is already finished.
    #[serde(rename = "is_finished", skip_serializing_if = "Option::is_none")]
    pub is_finished: Option<IsFinished>,
    /// The subtask position.
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
    /// A list of attachments which will be added to the new subtask.
    #[serde(rename = "attachments_to_add", skip_serializing_if = "Option::is_none")]
    pub attachments_to_add: Option<Vec<crate::models::CardAttachmentCreateRequest>>,
}

impl SubtaskCreateRequest {
    /// Subtask data.
    pub fn new(description: String) -> SubtaskCreateRequest {
        SubtaskCreateRequest {
            description,
            owner_user_id: None,
            is_finished: None,
            position: None,
            attachments_to_add: None,
        }
    }
}

/// When set to 1 the subtask is already finished.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IsFinished {
    #[serde(rename = "0")]
    Variant0,
    #[serde(rename = "1")]
    Variant1,
}

impl Default for IsFinished {
    fn default() -> IsFinished {
        Self::Variant0
    }
}

