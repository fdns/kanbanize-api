/*
 * Kanbanize API v2
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@kanbanize.com
 * Generated by: https://openapi-generator.tech
 */

/// UpdateUserRequest : User data.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateUserRequest {
    /// The email of the user.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// The username of the user.
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    /// The full name of the user.
    #[serde(rename = "realname", skip_serializing_if = "Option::is_none")]
    pub realname: Option<String>,
    /// Controls whether the user is enabled or not.
    #[serde(rename = "is_enabled", skip_serializing_if = "Option::is_none")]
    pub is_enabled: Option<IsEnabled>,
    /// Controls whether the user has two-factor authentication enabled or not.
    #[serde(rename = "is_tfa_enabled", skip_serializing_if = "Option::is_none")]
    pub is_tfa_enabled: Option<IsTfaEnabled>,
}

impl UpdateUserRequest {
    /// User data.
    pub fn new() -> UpdateUserRequest {
        UpdateUserRequest {
            email: None,
            username: None,
            realname: None,
            is_enabled: None,
            is_tfa_enabled: None,
        }
    }
}

/// Controls whether the user is enabled or not.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IsEnabled {
    #[serde(rename = "0")]
    Variant0,
    #[serde(rename = "1")]
    Variant1,
}

impl Default for IsEnabled {
    fn default() -> IsEnabled {
        Self::Variant0
    }
}
/// Controls whether the user has two-factor authentication enabled or not.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum IsTfaEnabled {
    #[serde(rename = "0")]
    Variant0,
    #[serde(rename = "1")]
    Variant1,
}

impl Default for IsTfaEnabled {
    fn default() -> IsTfaEnabled {
        Self::Variant0
    }
}

